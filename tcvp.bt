// TCVP - TppCoverPoint
// By RLC - inspired by other FOX templates by the researchers of Modders' Heaven!
LittleEndian();

typedef enum <ushort> {
    SET = 1,
    _ = 0,
} BIT <read=EnumToString(this)>;

struct Vector3
{
	float x;
	float y;
	float z;
};

struct Header
{
	char tcvp[4] <comment="TCVP">; Assert(tcvp=="TCVP"); // TCVP
	ushort fileVersion; // GZ is 0, TPP is 1. TPP crashes if it's 0 so I don't know
	if (fileVersion==256)
	{
		BigEndian();
	}
	ushort entryCount;
	uint offsetToEntries; Assert(offsetToEntries==12);
	
} header <bgcolor=0xCAE7B9>;

struct CoverPoint
{
	Vector3 position <bgcolor=0xEB9486>;
	short dir1; local float dir1Euler = (float)dir1/182;
	short dir2; local float dir2Euler = (float)dir2/182;
	short dir3; local float dir3Euler = (float)dir3/182;
	BIT isLeftOpen : 1;
 	BIT isRightOpen : 1;
	BIT isUpOpen : 1;
	BIT isStandable : 1; //gz only in dataset, bit space seems to need to exist
	BIT isUnVaultable : 1;
	BIT isUseVip : 1;
	BIT isUseSniper : 1;
	BIT isBreakDisable : 1;
	BIT isBreakEnable : 1;
		
} entry[header.entryCount] <optimize=false, bgcolor=0xF3DE8A>;

Assert(FTell() == FileSize(), "Failed to reach EoF.");