//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File: frt.bt (TppRouteSet)
//   Version: 1.0
//------------------------------------------------
LittleEndian();

struct Header
{
    char ROUT[4] <hidden = true>;
    ushort version;
    ushort routeIdCount;
    uint routeIdsOffset;

    uint routeDefinitionsOffset;
    uint routeNodesOffset;
    uint routeEventTablesOffset;
    uint routeNodeEventsOffset;
    
    uint routeIds[header.routeIdCount];
} header;

struct RouteDefinition
{
    uint nodeOffset;
    uint edgeOffset;
    uint eventTableOffset;
    ushort numNodes;
    ushort numEvents;
} routeDefinitions[header.routeIdCount];

struct Vector3
{
    float x;
    float y;
    float z;
} routeNodes[(header.routeEventTablesOffset - header.routeNodesOffset)/sizeof(Vector3)];

struct RouteNodeEventTable
{
    ushort nodeEventCount;
    ushort edgeEventIndex;
} routeNodeEventTables[(header.routeNodeEventsOffset - header.routeEventTablesOffset)/sizeof(RouteNodeEventTable)];

enum <ubyte> RouteAimTargetType
{
    ROUTE_AIM_NO_TARGET = 0,
    ROUTE_AIM_STATIC_POINT = 1,
    ROUTE_AIM_CHARACTER = 2,
    ROUTE_AIM_ROUTE_AS_SIGHT_MOVE_PATH = 3,
    ROUTE_AIM_ROUTE_AS_OBJECT = 4
};

struct RouteNodeEvent
{
    uint type;
	ubyte isNodeEvent;
    RouteAimTargetType aimPointType;
    ubyte flagA;
    ubyte flagB;

    Assert(flagA == 0);
	
	ushort time; //A common wait time is 479 or 299.
	ushort dir; //Counter-clockwise from 0 to ushort max, in Unity looking at blue Z

    if (aimPointType == ROUTE_AIM_NO_TARGET)
    {
        uint dummy1 <hidden = true>;
        uint dummy2 <hidden = true>;
        uint dummy3 <hidden = true>;

        Assert(dummy1 == 0 && dummy2 == 0 && dummy3 == 0);
    }
    else if (aimPointType == ROUTE_AIM_STATIC_POINT)
    {
        Vector3 aimPos;
    }
    else if (aimPointType == ROUTE_AIM_CHARACTER)
    {
        uint characterId;
        uint unknown1;
        uint dummy <hidden = true>;
    }
    else
    {
        uint routeId;
        uint unknown1;
        uint unknown2;
    }

    uint unknown3;
	uint extensions[4]; //These vary depending on event type
    char snippet[4];
} routeNodeEvents[(FileSize() - header.routeNodeEventsOffset)/48] <optimize=false>;