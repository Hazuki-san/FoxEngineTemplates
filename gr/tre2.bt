#include "../common/common.bt"
#include "gr_common.bt"
#include "terrain_common.bt"

GrHeader Header;

FSeek(Header.MetadataEntriesOffset);

GrMetadataEntries MetadataEntries;

#define ParamMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "param")]

#define HeightMapMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "heightMap")]

#define ComboTextureMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "comboTexture")]

#define MaxHeightMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "maxHeight")]

#define MinHeightMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "minHeight")]

#define MaterialIdsMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "materialIds")]

#define ConfigrationIdsMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "configrationIds")]

#define LayoutDescriptionMetadata MetadataEntries.Entry[GetGrMetadataEntryIndex(MetadataEntries, "layoutDescription")]

FSeek(startof(LayoutDescriptionMetadata) + LayoutDescriptionMetadata.DataOffset);
struct
{
    uint64 Unknown0;
    uint64 Unknown1;

    uint WidthWS;
    uint HeightWS;
    uint SubEntryOffset;
    float MaxHeightWS;
    float MinHeightWS;

    float GridDistance;
    ushort Unknown2;
    ushort Unknown3;
    uint Unknown4;

    FSeek(startof(this) + 0x18 + SubEntryOffset);

    DescriptionSubEntry SubEntry;

    uint Unknown5;
    uint Unknown6;
} LayoutDescription <bgcolor=0x999900>;

FSeek(startof(ParamMetadata) + ParamMetadata.DataOffset);
struct
{
    LodParam data[ParamMetadata.DataSize / sizeof(LodParam)];
} Param <bgcolor=0x00aaff>;

FSeek(startof(MaxHeightMetadata) + MaxHeightMetadata.DataOffset);
struct
{
    float data[MaxHeightMetadata.DataSize / sizeof(float)];
} MaxHeight <bgcolor=0xff00aa>;

FSeek(startof(MinHeightMetadata) + MinHeightMetadata.DataOffset);
struct
{
    float data[MinHeightMetadata.DataSize / sizeof(float)];
} MinHeight <bgcolor=0xaaff00>;

FSeek(startof(HeightMapMetadata) + HeightMapMetadata.DataOffset);
struct
{
    float data[HeightMapMetadata.DataSize / sizeof(float)];
} HeightMap <bgcolor=0x99aacc>;

FSeek(startof(ComboTextureMetadata) + ComboTextureMetadata.DataOffset);
struct
{
    Pixel data[ComboTextureMetadata.DataSize / sizeof(Pixel)];
} ComboTexture <bgcolor=0x111199>;

FSeek(startof(MaterialIdsMetadata) + MaterialIdsMetadata.DataOffset);
struct
{
    Pixel data[MaterialIdsMetadata.DataSize / sizeof(Pixel)];
} MaterialIds <bgcolor=0x991111>;

FSeek(startof(ConfigrationIdsMetadata) + ConfigrationIdsMetadata.DataOffset);
struct
{
    uint data[ConfigrationIdsMetadata.DataSize / sizeof(uint)];
} ConfigrationIds <bgcolor=0x119911>;