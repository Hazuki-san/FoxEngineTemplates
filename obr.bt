//------------------------------------------------
//--- 010 Editor v7.0.2 Binary Template
//
//      File: obr.bt
//   Authors: youarebritish
//   Version: 0.2
//------------------------------------------------
struct Header
{
    uint Type;						// Always 3? rlc now a uint
    uint TopHeaderSize;			    // Always 32? rlc now a uint
    uint FileSize;
    uint ObjectBrush <hidden=true>; // Hash for "ObjectBrush"
    uint ObjectBrushStrOffset;         // Points to the text "ObjectBrush"

    FSkip(5*4);

    uint u3;                        // Always 1?
    uint DataOffset;                // Object entries start at TopHeaderSize + DataOffset
    uint DataSize;                  // Does not include padding to fit 16-byte boundary

    FSkip(4*4);

    uint u4;                        // Code makes sure this is not 0

    FSkip(8);
    FSkip(16);
    
    struct HeaderMetadataFloat
    {
        ushort VariableType; // 0: uint, 2: float
        ushort NextMetadataOffset; //sizeof(HeaderMetadata0)
        uint VariableNameHash <hidden=true>;
        uint StringOffset <hidden=true>;
        float value;
    };
    
    struct HeaderMetadataUInt
    {
        ushort VariableType; // 0: uint, 2: float
        ushort NextMetadataOffset; //sizeof(HeaderMetadata0)
        uint VariableNameHash <hidden=true>;
        uint StringOffset <hidden=true>;
        uint value;
    };

	// block size in meters
    HeaderMetadataFloat blockSizeWMetadata;
    HeaderMetadataFloat blockSizeHMetadata;
	// numBlocksWmetadata and numBlocksHmetadata - Block count in height/width of block field. 
    // Even if dataset numBlocks is 0, it can be 2 here.
    HeaderMetadataUInt numBlocksWMetadata;
    HeaderMetadataUInt numBlocksHMetadata;
    HeaderMetadataUInt numObjectsMetadata;
	
} header <bgcolor=0x7E846B>;

FSkip (80);

struct Object
{
    float yTranslation;
	short xTranslation;
	short zTranslation;
    // local float xTranslation = header.blockSizeWMetadata.value*((float)(ReadUShort(FTell() + 12 % header.numBlocksWMetadata.value) + 0.5 - (float)header.numBlocksWMetadata.value / 2) + header.blockSizeWMetadata.value * (float)ReadShort() / 32640;
    // FSkip(2);
    // local float zTranslation = header.blockSizeHMetadata.value*((float)(blockID / header.numBlocksHMetadata.value) + 0.5 - (float)header.numBlocksHMetadata.value / 2) + header.blockSizeHMetadata.value * (float)ReadShort()/ 32640;
    // FSkip(2);
    hfloat xQuat;
    hfloat yQuat;
    hfloat zQuat;
    hfloat wQuat;
    ushort blockID; // Index of ObjBrush dataset entity's pluginHandle list entry
    ubyte pluginBrushID;
    ubyte yScale;
    uint objectIndex;
	
} objects[header.numObjectsMetadata.value] <bgcolor=0x8CAF5A>;