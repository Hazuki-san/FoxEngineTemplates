//NTA - NavTacticalAction File
//Based on youarebritish's documentation, by RLC
//https://metalgearmodding.fandom.com/wiki/NTA

//Coolors
#define SpringGreen 0x8DFC5E
#define ElectricBlue 0xF3F98E
#define PaleCerulean 0xDFBE93
#define VioletBlueCrayola 0xD17783
#define OldLavender 0x725A6D

#include "common/common.bt"

string ResolveHashFunc(StrCode& hash)
{
	switch (hash.hash)
	{
	case 221776209274273: return "StepOn";
	case 74196699949876: return "StepDown";
	case 188057460958932: return "LadderUp";
	case 263911609609000: return "LadderDown";
	default: return "";
	}
}

string ResolveHashFunc32(StrCode32& hash)
{
	switch (hash.hash)
	{
	case 1277978017: return "StepOn";
	case 1139911476: return "StepDown";
	case 2317903572: return "LadderUp";
	case 3049138984: return "LadderDown";
    //3451056519
    //504469101
	default: return "";
	}
}

#define FOX_DATA_HASH_RESOLVE_FUNC ResolveHashFunc

struct Header 
{
    char sign[4];
    short unk0; Assert(unk0==1,"header unk0 isn't 1!");
    short unk1; Assert(unk1==1,"header unk1 isn't 1!");
    uint offsetToData;
} header <bgcolor=SpringGreen, hidden=true>;

FSeek(header.offsetToData);

struct Data
{
    StrCode DefaultEdgeActionName; //???

    uint actionCount <hidden=true>;
    int offsetToActions <hidden=true>;
    uint actionNameOffset <hidden=true>;
    uint dataSize <hidden=true>;
    
    local int i <hidden=true>;
    local uint pos <hidden=true>;
    for (i = 0; i < actionCount; i++)
    {
        struct GkTacticalAction
        {
            pos = FTell();
            FSeek(header.offsetToData + actionNameOffset + i * sizeof(StrCode));

            StrCode actionName <bgcolor=VioletBlueCrayola>; //Entry name?

            FSeek(pos);

            struct GkTacticalActionWaypoint
            {
                Vector3 position <fgcolor=PaleCerulean>;
                StrCode32 waypointAction;
            } waypoint[2];

            StrCode edgeActionName; //Not always empty! Ex: gntn_common.nta. But what kinda name???

            short unk0; //These unknowns scare me the most. Can be -1, 1, 32, 1153
            Printf("\n%u, %u = %g", waypoint[0].waypointAction.hash, waypoint[1].waypointAction.hash, unk0);
            short padding0 <hidden=true>; Assert(padding0==0,"padding0 isn't 0!");
            int padding1 <hidden=true>; Assert(padding1==0,"padding1 isn't 0!!");
        } action <bgcolor=OldLavender, optimize=false>;
    };
} data<bgcolor=ElectricBlue>;