#include "common/common.bt"

enum <uint> LOCATOR_BINARY_FLAGS
{
    LOCATOR_BINARY_FLAGS_USE_SCALE = 1,
    LOCATOR_BINARY_FLAGS_USE_IDS = 2,
};

struct LocatorBinaryHeader
{
    uint LocatorCount;
    LOCATOR_BINARY_FLAGS Flags;

    uint64 Padding <hidden = true>; Assert(Padding == 0);
} Header;

struct LocatorBinary
{
    Vector3 Translation; FSkip(4);
    Quaternion Rotation;
    if ((Header.Flags & LOCATOR_BINARY_FLAGS_USE_SCALE) != 0)
    {
        Vector3 Scale; FSkip(4);
    }
} Locators[Header.LocatorCount] <optimize = false>;

if ((Header.Flags & LOCATOR_BINARY_FLAGS_USE_IDS) != 0)
{
    struct LocatorBinaryId
    {
        StrCode32 Name;
        StrCode32 DataSetName;
    } Ids[Header.LocatorCount] <optimize = false>;
}