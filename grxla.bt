// rlc Original template by sai/youarebritish!

LittleEndian();

struct Header
{
    char FGxL[4] <hidden=true>;
    uint magicNumber1;

    Assert(magicNumber1 == 0);

    uint n1;
    uint n2;

    char CM00[4];

    uint headerBytes;
    uint dataSetFilenameHash <hidden=true>;

    int o1;
    uint n3;
    uint n4;

    char dataSetFilename[headerBytes-24];
} header;

struct LightArray
{
    struct Vector4
    {
        float x;
        float y;
        float z;
        float w;
    };

    struct Quaternion
    {
        hfloat x;
        hfloat y;
        hfloat z;
        hfloat w;
    };
	
	while (FTell()<FileSize()-0x8) // rlc since it probably doesn't count them and just stacks them arbitrarily
	{
		struct LightArrayEntry
		{
			char name[4];
			uint entrySize; //rlc last footer entry is 8 bytes long with no name, maybe that's how the while loop is terminated?

			uint lightNameHash;
			uint vals1[5];
			Quaternion rotation;
			hfloat vals2[2];
			float vals3[7];

			Vector4 translation;
			ushort lumen;
			ushort u2;
			ushort n3;
			ushort index;
			float lightSize;
			float u5;

			char lightProbeName[entrySize - (4 * sizeof(char)) - (25 * sizeof(uint))];
		} entry <optimize=false>;
	}
} lightArray;

struct Footer
{
    uint footerUnknown1;
    uint footerUnknown2;
} footer;