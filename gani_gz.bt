// GANI - GameAnimation
// By RLC, based on templates by MrDev/JohnHudeski/NewStudent
// https://metalgearmodding.fandom.com/wiki/GANI
// Me: Remove this comment when you actually start having to use those templates^

#include "common/common.bt"
#include "common/anim_common.bt"

#define COLOR_HEADER 0x4F93FF
#define COLOR_NODES 0x12E8C2

string ResolveHashFunc(StrCode32& hash)
{
	switch (hash.hash)
	{
	case 3933341002: return "ROOT";
	case 3254096966: return "DEMO";
	case 2620425302: return "CAMERA";
	case 3150281601: return "MOVE";
	case 2862912361: return "CameraParam";
	case 1885607306: return "SI Frame";
	case 1889896775: return "SKEL";
	case 2454300086: return "MESH_EVENT";
	case 143688520: return "MOTION";
	case 2215748180: return "MODEL";
	case 3736262940: return "SKELINFO";
	case 917055795: return "MTPINFO";
	case 2846912397: return "MTEV";
	case 494270195: return "MTP";
	case 2250865118: return "SHADER";
	case 3937479969: return "MTP_LIST";
	case 4042487769: return "MTP_PARENT_LIST";
	case 3187573380: return "LOCATOR";
	case 2036377104: return "GLOBALSRT";
	case 2053459263: return "Unknown";

	// Parameter names
	case 2570203771: return "TARGET_NAME";
	case 3426329078: return "SLOPE_DIR";
	case 35201703: return "SLOPE_ANGLE";

	default: return "";
	}
}

struct Header
{
	int magic <comment="June 13th, 2011">; if (magic==3533896715) {BigEndian();BitfieldRightToLeft();}
	int offsetToNodes;
	int fileSize; Assert(fileSize==FileSize());
	FSkip(0x4);
	
	FSkip(0x10);
	
} header <bgcolor=COLOR_HEADER>;

FSeek(header.offsetToNodes);

struct FoxDataString;
struct StringList
{
    uint EntryCount <hidden = true>;
    local int64 mtpLstIdx;
    for (mtpLstIdx = 0; mtpLstIdx < EntryCount; mtpLstIdx++)
    {
        FoxDataString Entry <optimize = true>;
    }
};

struct GANI
{
	switch (ResolveHashFunc(parentof(this).Name.Hash))
	{
	case "MOVE":
	case "CameraParam":
	case "SI Frame":
	case "SKEL":
	case "Unknown":
	case "MTP":
    case "MOTION":
        AnimTracks Tracks; //AnimFrame invalid componentcount
		break;
	case "MTP_LIST":
	case "MTP_PARENT_LIST":
		StringList MTPList <bgcolor = 0xF38ADE>;
		break;
	default:
		{
			if (parentof(this).ParentNodeOffset != 0)
			{
				if (ReadUInt(startof(parentof(this)) + parentof(this).ParentNodeOffset) == 2250865118 /*SHADER*/)
				{
					AnimTracks Tracks; //AnimFrame invalid componentcount
				}
			}
            switch (parentof(this).Name.Hash.hash)
            {
            case 2447659851:
		        StringList BoneList <bgcolor = 0xF38ADE>;
                break;
            case 3337172921:
                AnimTracks Tracks; //AnimFrame invalid componentcount
                break;
            }
		}
	}
};

#define FOX_DATA_FLAG_IS_HAS_PAYLOAD
#define FOX_DATA_RESOLVE_HASH_FUNC ResolveHashFunc

#define FOX_DATA_PAYLOAD GANI

#include "common/FoxData_common.bt"

FoxDataNodes Nodes;